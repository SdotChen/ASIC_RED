digraph Ingress {
subgraph cluster {
graph [
label="", labeljust=r, style=bold];
0[label=__START__, margin="", shape=rectangle, style=solid];
1[label=__EXIT__, margin="", shape=rectangle, style=solid];
2[label="ig_intr_md.ingress_port == 68;", margin="", shape=rectangle, style=solid];
3[label="Ingress.drop_recirc_t", margin="", shape=ellipse, style=solid];
4[label="ig_intr_md.ingress_port == 8 || ig_intr_md.ingress_port == 60;", margin="", shape=rectangle, style=solid];
5[label="Ingress.multicast_t", margin="", shape=ellipse, style=solid];
6[label="Ingress.set_p4_header_t", margin="", shape=ellipse, style=solid];
7[label="Ingress.set_meter_t", margin="", shape=ellipse, style=solid];
8[label="Ingress.update_seq_ig_t", margin="", shape=ellipse, style=solid];
9[label="ig_intr_md.ingress_port == 68;", margin="", shape=rectangle, style=solid];
10[label="Ingress.set_drop_prob_t", margin="", shape=ellipse, style=solid];
11[label="Ingress.set_seq_recirc_t", margin="", shape=ellipse, style=solid];
12[label="Ingress.set_aver_qdepth_t", margin="", shape=ellipse, style=solid];
13[label="Ingress.get_drop_prob_t", margin="", shape=ellipse, style=solid];
14[label="Ingress.get_seq_recirc_t", margin="", shape=ellipse, style=solid];
15[label="Ingress.get_aver_qdepth_t", margin="", shape=ellipse, style=solid];
16[label="hdr.p4_header.color[1:1] == 1;", margin="", shape=rectangle, style=solid];
17[label="Ingress.get_rndnum_t", margin="", shape=ellipse, style=solid];
18[label="Ingress.get_diff_t", margin="", shape=ellipse, style=solid];
19[label="meta.diff == 0;", margin="", shape=rectangle, style=solid];
20[label="Ingress.drop_t", margin="", shape=ellipse, style=solid];
0 -> 2[label=""];
2 -> 3[label=TRUE];
2 -> 4[label=FALSE];
3 -> 9[label=""];
4 -> 5[label=TRUE];
4 -> 9[label=FALSE];
5 -> 6[label=""];
6 -> 7[label=""];
7 -> 8[label=""];
8 -> 9[label=""];
9 -> 10[label=TRUE];
9 -> 13[label=FALSE];
10 -> 11[label=""];
11 -> 12[label=""];
12 -> 16[label=""];
13 -> 14[label=""];
14 -> 15[label=""];
15 -> 16[label=""];
16 -> 17[label=TRUE];
16 -> 1[label=FALSE];
17 -> 18[label=""];
18 -> 19[label=""];
19 -> 20[label=TRUE];
19 -> 1[label=FALSE];
20 -> 1[label=""];
}
}
